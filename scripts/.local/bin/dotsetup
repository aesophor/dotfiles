#!/usr/bin/env bash
# dotsetup
# 
# Personal script to update dotfiles.

dotfiles_path="$HOME/Dots"

# print message, remove old files/directory, and perform a symlink.
function symlink() {
    # check if old file exists.
    # remove the old one and create a new symlink.
    if [ -e "$2" ] || [ -L "$2" ]; then
        rm "$2"
    fi

    if [ -d "$2" ]; then
        rm -rf "$2"
    fi

    ln -sv "$1" "$2"
}

function setup_dotfiles() {
    # X server configuration.
    symlink "$dotfiles_path/.x" "$HOME/.x"
    symlink "$dotfiles_path/.xinitrc" "$HOME/.xinitrc"
    symlink "$dotfiles_path/.xserverrc" "$HOME/.xserverrc"
    symlink "$dotfiles_path/.Xresources" "$HOME/.Xresources"
    symlink "$dotfiles_path/.xbindkeysrc" "$HOME/.xbindkeysrc"
    
    # bash, zsh, vim, wget, curl, neofetch, ncmpcpp, git configuration.
    symlink "$dotfiles_path/.bashrc" "$HOME/.bashrc"
    symlink "$dotfiles_path/.zshrc" "$HOME/.zshrc"
    symlink "$dotfiles_path/.vim" "$HOME/.vim"
    symlink "$dotfiles_path/.vimrc" "$HOME/.vimrc"
    symlink "$dotfiles_path/.wgetrc" "$HOME/.wgetrc"
    symlink "$dotfiles_path/.curlrc" "$HOME/.curlrc"
    symlink "$dotfiles_path/.config/ncmpcpp" "$HOME/.ncmpcpp"
    symlink "$HOME/.private/git/.gitconfig" "$HOME/.gitconfig"

    # i3, dunst, compton, menutray, KDE, gtk configuration.
    symlink "$dotfiles_path/.config/i3" "$HOME/.config/i3"
    symlink "$dotfiles_path/.config/polybar" "$HOME/.config/polybar"
    symlink "$dotfiles_path/.config/dunst" "$HOME/.config/dunst"
    symlink "$dotfiles_path/.config/compton" "$HOME/.config/compton"
    symlink "$dotfiles_path/.config/plasma-workspace" "$HOME/.config/plasma-workspace"
    symlink "$dotfiles_path/.gtkrc-2.0" "$HOME/.gtkrc-2.0"
    symlink "$dotfiles_path/.config/ranger" "$HOME/.config/ranger"
    symlink "$dotfiles_path/.config/qutebrowser/config.py" "$HOME/.config/qutebrowser/config.py"
    symlink "$HOME/.gtkrc-2.0" "$HOME/.gtkrc-2.0-kde4"
    
    # Custom command aliases and functions.
    symlink "$dotfiles_path/.config/zsh/aliases" "$HOME/.config/zsh/aliases"
    symlink "$dotfiles_path/.config/zsh/functions" "$HOME/.config/zsh/functions"
    
    # Now bin/* will be accessible under ~/.local/bin/.
    mkdir "$HOME/.local" 2>/dev/null
    symlink "$dotfiles_path/bin" "$HOME/.local/bin"

    # gdb configuration.
    symlink "$dotfiles_path/.gdbinit" "$HOME/.gdbinit"

    # Misc.
    symlink "$dotfiles_path/.face.icon" "$HOME/.face.icon"

    # Copy oh-my-zsh config and zsh theme.
    if [ -d "$dotfiles_path/.oh-my-zsh" ]; then
        mkdir -p "$HOME/.config/oh-my-zsh" && mv -rp "$dotfiles_path/.oh-my-zsh/"* "$HOME/.config/oh-my-zsh/."
    fi
    cp -p "$dotfiles_path/.config/oh-my-zsh/themes/"* "$HOME/.config/oh-my-zsh/themes/."
}


# Confirmation.
echo "dotsetup"
echo "========================================================================="
echo "Running this script without reading it might lead to devastating results."
echo "Make sure you've read the code before running it, and that you've put"
echo "these dotfiles under $dotfiles_path"
echo -n "Proceed? [type yes in uppercase] "
read choice

# Check user directory existence.
if [ "$choice" = "YES" ]; then
    echo -e "Running...\n"
    setup_dotfiles
    echo -e "\n[*] Congrats! You have updated all symlinks and dotfiles are now ready to be loaded."
else
    echo "Aborted."
    exit 0
fi
